<!DOCTYPE suite SYSTEM "http://testng.org/testng-1.0.dtd" >

<suite name="TestNG JDK 1.4" verbose="1" parallel="false" 
  thread-count="2" annotations="javadoc">

   <test name="Dependents">
    <parameter name="foo" value="Cedric" />
     <classes>
       <class name="test.dependent.OrderMethodTest" />
       <class name="test.dependent.DependentTest" />
       <class name="test.dependent.SampleDependentMethods" />
       <class name="test.dependent.SampleDependentMethods2" />
       <class name="test.dependent.SampleDependentMethods3" />
       <class name="test.dependent.SampleDependentConfigurationMethods"/>
       <class name="test.dependent.ClassDependsOnGroups"/>
       <class name="test.dependent.DependsWithRegexp"/>
       <class name="test.dependent.DependentAlwaysRunTest" />
       <class name="test.dependent.TestngTest" />
    </classes>
   </test>
	
  <test name="Nopackage">
   <groups>
	   <run>
			<include name="nopackage"/>
		</run>
	</groups>

    <classes>
	        <class name="NoPackageTest" />
    </classes>
  </test>

   <parameter name="first-name" value="Cedric"/>
<!-- -->
   <test name="Regression1" >
     <groups>
       <define name="evenodd">
         <include name="even" />
         <include name="odd" />
       </define>
       <run>
         <exclude name="excludeThisGroup" />
       </run>
     </groups>

     <classes>
       <class name="test.parameters.ParameterSample" />
       <class name="test.parameters.ParameterTest" />

       <class name="test.Test1" />
       <class name="test.Test2" />
       <class name="test.CtorCalledOnce" />
       <class name="test.expectedexceptions.ExpectedExceptionsTest" />
       <class name="test.access.PrivateAccessConfigurationMethods" />
     </classes>
   </test>
<!-- -->
<!-- -->
   <test name="Regression2">
     <classes>
       <class name="test.Test1" />
       <class name="test.MethodTest" />
       <class name="test.sample.AfterClassCalledAtEnd"/>
       <class name="test.configuration.ConfigurationTest"/>
       <class name="test.configuration.MethodCallOrderTest"/>
       <class name="test.configuration.ExternalConfigurationClass"/>
       <class name="test.privatemethod.PrivateMethodTest$PrivateMethodInnerTest"/>
       <class name="test.multiple.TestMultiple"/>
       <class name="test.CommandLineTest"/>
       <class name="test.Test4" />
       <class name="test.enabled.VerifyEnabledTest" />
       <class name="test.mannotation.MAnnotationSampleTest" />
       <class name="test.abstractbaseclass.DummyTest" />
       <class name="test.thread.ThreadPoolSizeTest" />
       <class name="test.thread.SequentialTest" />
       <class name="test.configuration.GroupLessTest" />
       <class name="test.reports.ReportTest" />
     </classes>
   </test>
<!-- 
    THIS CANNOT WORK: cannot set the sourcedirs
-->

<!--
    <test name="BeforeTestMethod Behavior Regression">
        <classes>
            <class name="test.failedconfs.FailedBeforeTestMethodConfigurationBehaviorTest" />
        </classes>
    </test>
-->
    
<!-- -->
   <test name="Basic" >
     <classes>
       <class name="test.sample.Basic2" />
       <class name="test.sample.Basic1" />
     </classes>
   </test>
<!-- -->
<!-- -->
   <test name="Exclusion">
     <groups>
       <run>
         <exclude name="excludeThisGroup" />
       </run>
     </groups>
     <classes>
       <class name="test.Test2" />
     </classes>
   </test>
<!-- -->
<!-- -->

   <test name="Inheritance">
     <classes>
       <class name="test.SampleInheritance" />
     </classes>
   </test>
<!-- -->
   <test name="JUnit">
     <classes>
       <class name="test.JUnitTest1" />
     </classes>
   </test>
<!--   -->
<!-- FIXME
     <test name="PHolser">
        <classes>
       <class name="test.pholser.Demo" />
        <class name="test.pholser.Saboteur" />
        </classes>
     </test>
-->

<!-- -->
   <test name="Skip">
     <classes>
       <class name="test.dependent.DependentTest" />
     </classes>
   </test>
<!-- -->
   <!-- Test scopes -->

   <parameter name="parameter" value="out"/>
<!-- -->
   <test name="Test outer scope">
     <groups>
       <run>
         <include name="outer-group" />
       </run>
     </groups>
     <classes>
       <class name="test.sample.Scope" />
     </classes>
   </test>

   <test name="Test inner scope">
     <parameter name="parameter" value="in" />
     <groups>
       <run>
         <include name="inner-group" />
       </run>
     </groups>
     <classes>
       <class name="test.sample.Scope" />
     </classes>
   </test>

   <test name="AfterClassCalledAtEnd">
     <classes>
       <class name="test.sample.AfterClassCalledAtEnd"/>
     </classes>
   </test>
<!-- -->
<!-- DONE -->
   <test name="Triangle">
      <classes>
         <class name="test.triangle.Child1"/>
         <class name="test.triangle.Child2"/>
      </classes>
   </test>

   <test name="CheckTrianglePost">
      <parameter name="expected-calls" value="2"/>
      <classes>
         <class name="test.triangle.CheckCount"/>
      </classes>
   </test>
<!-- -->

   <!-- Test that we can declare groups and dependents on classes -->
<!-- DONE -->
   <test name="Test class groups 1" >
     <classes>
       <class name="test.classgroup.Second" />
       <class name="test.classgroup.First" />
     </classes>
   </test>

     <test name="Test class groups 2" >
     <classes>
       <class name="test.classgroup.First" />
       <class name="test.classgroup.Second" />
     </classes>
   </test>
<!-- -->
   <parameter name="factory-param" value="FactoryParam"/>
<!-- DONE -->
  <test name="Factory">
    <classes>
      <class name="test.factory.FactoryTest" />
      <class name="test.factory.VerifyFactoryTest" />
      <class name="test.factory.FactoryInSeparateClass" />
      <class name="test.factory.IInstanceFactory" />
    </classes>
  </test>
<!-- -->
<!-- -->
  <test name="TimeOut">
    <classes>
      <class name="test.Test3" />
    </classes>
  </test>
<!-- -->
  <test name="InvocationCount">
    <classes>
      <class name="test.InvocationAndSuccessPercentageTest" />
    </classes>
  </test>

  <!-- Test parameters for constructors -->  
  <parameter name="string" value="Cedric" />
  <parameter name="int" value="42" />
  <parameter name="boolean" value="true" />
  <parameter name="byte" value="43" />
  <parameter name="char" value="c" />
  <parameter name="double" value="44.0" />
  <parameter name="float" value="45.0" />
  <parameter name="long" value="46" />
  <parameter name="short" value="47" />

  <test name="Parameters for constructors">
    <classes>
      <class name="test.ParameterConstructorTest" />
    </classes>
  </test>

  <test name="DataProvider">
    <classes>
       <class name="test.dataprovider.Sample1Test" />
       <class name="test.dataprovider.IterableTest" />
       <class name="test.dataprovider.MultipleDataProviderTest" />
       <class name="test.dataprovider.ChildUsingParentDataProviderTest" />
       <class name="test.dataprovider.ChildDataProvider" />
    </classes>
  </test>

  <test name="InheritGroups">
    <groups>
      <run>
        <include name="group1" />
      </run>
    </groups>
    <classes>
      <class name="test.configuration.ConfigurationInheritGroupsSampleTest" />
    </classes>
  </test>
  
  <test name="Inheritance">
    <classes>
      <class name="test.inheritance.ClassScopeTest" />
    </classes>
  </test>
 

</suite>
